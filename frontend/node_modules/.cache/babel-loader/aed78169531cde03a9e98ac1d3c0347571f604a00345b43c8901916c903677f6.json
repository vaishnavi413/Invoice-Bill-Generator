{"ast":null,"code":"var _jsxFileName = \"D:\\\\invoice-bill-generator\\\\frontend\\\\src\\\\components\\\\InvoiceList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchInvoices } from \"../api/invoiceApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InvoiceList = () => {\n  _s();\n  const [invoices, setInvoices] = useState([]);\n  useEffect(() => {\n    const getInvoices = async () => {\n      const data = await fetchInvoices();\n      setInvoices(data);\n    };\n    getInvoices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Invoices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), invoices.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No invoices found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) // ❌ This shows when the list is empty\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: invoices.map(invoice => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [invoice.customerName, \" - \\u20B9\", invoice.grandTotal]\n      }, invoice._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(InvoiceList, \"Mp0Ae8iaX/+qheNRHlWcSBEWOjE=\");\n_c = InvoiceList;\nexport default InvoiceList;\nvar _c;\n$RefreshReg$(_c, \"InvoiceList\");","map":{"version":3,"names":["React","useEffect","useState","fetchInvoices","jsxDEV","_jsxDEV","InvoiceList","_s","invoices","setInvoices","getInvoices","data","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","invoice","customerName","grandTotal","_id","_c","$RefreshReg$"],"sources":["D:/invoice-bill-generator/frontend/src/components/InvoiceList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchInvoices } from \"../api/invoiceApi\";\r\n\r\nconst InvoiceList = () => {\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInvoices = async () => {\r\n      const data = await fetchInvoices();\r\n      setInvoices(data);\r\n    };\r\n    getInvoices();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Invoices</h2>\r\n      {invoices.length === 0 ? (\r\n        <p>No invoices found</p>  // ❌ This shows when the list is empty\r\n      ) : (\r\n        <ul>\r\n          {invoices.map((invoice) => (\r\n            <li key={invoice._id}>{invoice.customerName} - ₹{invoice.grandTotal}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvoiceList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,IAAI,GAAG,MAAMR,aAAa,CAAC,CAAC;MAClCM,WAAW,CAACE,IAAI,CAAC;IACnB,CAAC;IACDD,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBR,QAAQ,CAACS,MAAM,KAAK,CAAC,gBACpBZ,OAAA;MAAAO,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAE;IAAA,eAE1BX,OAAA;MAAAO,QAAA,EACGJ,QAAQ,CAACU,GAAG,CAAEC,OAAO,iBACpBd,OAAA;QAAAO,QAAA,GAAuBO,OAAO,CAACC,YAAY,EAAC,WAAI,EAACD,OAAO,CAACE,UAAU;MAAA,GAA1DF,OAAO,CAACG,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoD,CACzE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACT,EAAA,CAzBID,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}